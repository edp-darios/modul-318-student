<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cEj+/PkHcGlrocHFY6IAAAAASUVORK5CYII=
</value>
  </data>
</root>